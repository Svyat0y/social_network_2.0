{"version":3,"sources":["Redux/selectors/profile-selectors.js","Components/MainPage/Settings/Settings.module.css","Components/MainPage/Settings/SettingsForm.jsx","Components/MainPage/Settings/Settings.jsx","Components/MainPage/Settings/SettingsContainer.jsx"],"names":["getProfile","state","profilePage","profile","getPostData","postData","getStatus","status","getAuthorizedId","auth","id","getUpdatingBioSuccess","updatingBioSuccess","module","exports","Input","Element","Textarea","maxLength300","maxLengthCreator","SettingsFormRedux","reduxForm","form","enableReinitialize","props","handleSubmit","onSubmit","className","style","settings_form","settings_box_wrapper","input_info_wr","Field","name","component","placeholder","type","validate","contacts_header","Object","keys","contacts","map","key","updating_success","Settings","saveSettingsForm","uploadPhoto","settings_wrapper","upload_Photo_wrapper","onChange","initialValues","connect","refreshProfileInSettings","updateBioProfile","updateWasSuccessfully","savePhoto","closeMenu","useEffect","setTimeout","formData","e","target","files","Preloader"],"mappings":"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","file":"static/js/6.f6335312.chunk.js","sourcesContent":["export const getProfile = (state) => {\r\n\treturn state.profilePage.profile\r\n}\r\n\r\nexport const getPostData = (state) => {\r\n\treturn state.profilePage.postData\r\n}\r\n\r\nexport const getStatus = (state) => {\r\n\treturn state.profilePage.status\r\n}\r\n\r\nexport const getAuthorizedId = (state) => {\r\n\treturn state.auth.id\r\n}\r\n\r\nexport const getUpdatingBioSuccess = (state) => {\r\n\treturn state.profilePage.updatingBioSuccess\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings_wrapper\":\"Settings_settings_wrapper__P1qZF\",\"upload_Photo_wrapper\":\"Settings_upload_Photo_wrapper__2pIvc\",\"settings_form\":\"Settings_settings_form__1D2bN\",\"settings_box_wrapper\":\"Settings_settings_box_wrapper__29_RQ\",\"input_info_wr\":\"Settings_input_info_wr__2mUx4\",\"contacts_header\":\"Settings_contacts_header__1vcoR\",\"updating_success\":\"Settings_updating_success__3jace\"};","import {Element} from \"../../Common/FormControls/FormControls\";\r\nimport {maxLengthCreator} from \"../../../utils/validators\";\r\nimport style from \"./Settings.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\n\r\nconst Input = Element(\"input\")\r\nconst Textarea = Element(\"textarea\")\r\nconst maxLength300 = maxLengthCreator(300)\r\n\r\nconst SettingsForm = (props) => {\r\n\r\n\tconst {handleSubmit, profile, updatingBioSuccess} = props\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit} className={style.settings_form}>\r\n\r\n\t\t\t<div className={style.settings_box_wrapper}>\r\n\t\t\t\t<span>Full Name:</span>\r\n\t\t\t\t<div className={style.input_info_wr}>\r\n\t\t\t\t\t<Field name=\"fullName\" component={Input} placeholder=\"Full name\"/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={style.settings_box_wrapper}>\r\n\t\t\t\t<span>Looking For A Job:</span>\r\n\t\t\t\t<div className={style.input_info_wr}>\r\n\t\t\t\t\t<Field name=\"lookingForAJob\" component={Input} type=\"checkbox\"/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={style.settings_box_wrapper}>\r\n\t\t\t\t<span>Job Description:</span>\r\n\t\t\t\t<div className={style.input_info_wr}>\r\n\t\t\t\t\t<Field name=\"lookingForAJobDescription\" component={Textarea} validate={[maxLength300]} placeholder=\"Your skills\"/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={style.settings_box_wrapper}>\r\n\t\t\t\t<span>About Me:</span>\r\n\t\t\t\t<div className={style.input_info_wr}>\r\n\t\t\t\t\t<Field name=\"aboutMe\" component={Textarea} validate={[maxLength300]} placeholder=\"About me\"/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<h5 className={style.contacts_header}>Contacts</h5>\r\n\r\n\t\t\t{Object.keys(profile.contacts).map(key => {\r\n\t\t\t\treturn <div key={key} className={style.settings_box_wrapper}>\r\n\t\t\t\t\t<span>{key}:</span>\r\n\t\t\t\t\t<div className={style.input_info_wr}>\r\n\t\t\t\t\t\t<Field name={\"contacts.\" + key} component={Input}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t})}\r\n\t\t\t<button>Save changes</button>\r\n\t\t\t<span className={style.updating_success}>{updatingBioSuccess}</span>\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nconst SettingsFormRedux = reduxForm({form: \"settingsForm\", enableReinitialize: true})(SettingsForm)\r\n\r\nexport default SettingsFormRedux;","import React from \"react\";\r\nimport style from \"./Settings.module.css\";\r\nimport SettingsFormRedux from \"./SettingsForm\";\r\n\r\nconst Settings = (props) => {\r\n\r\n\tconst {profile, saveSettingsForm, updatingBioSuccess, uploadPhoto} = props\r\n\r\n\treturn (\r\n\t\t<div className={style.settings_wrapper}>\r\n\t\t\t<div className={style.upload_Photo_wrapper}>\r\n\t\t\t\t<span>Upload your photo:</span>\r\n\t\t\t\t<input onChange={uploadPhoto} type=\"file\"/>\r\n\t\t\t</div>\r\n\t\t\t<SettingsFormRedux onSubmit={saveSettingsForm} initialValues={profile} profile={profile}\r\n\t\t\t\t\t\t\t   updatingBioSuccess={updatingBioSuccess}/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Settings;","import React, {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Settings from \"./Settings\";\r\nimport {refreshProfileInSettings, savePhoto, updateBioProfile, updateWasSuccessfully} from \"../../../Redux/profile-reducer\";\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport {getProfile, getUpdatingBioSuccess} from \"../../../Redux/selectors/profile-selectors\";\r\nimport {closeMenu} from \"../../../Redux/side-bar-reducer\";\r\n\r\nconst SettingsContainer = (props) => {\r\n\r\n\tconst {profile, refreshProfileInSettings, updateBioProfile, updatingBioSuccess, updateWasSuccessfully, savePhoto, closeMenu} = props\r\n\r\n\tconst uploadPhoto = (e) => {\r\n\t\tif (e.target.files) savePhoto(e.target.files[0])\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\trefreshProfileInSettings()\r\n\t\tsetTimeout(() => closeMenu(), 250)\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\treturn () => {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tupdateWasSuccessfully(\"\")\r\n\t\t\t}, 4000)\r\n\t\t}\r\n\t}, [updatingBioSuccess])\r\n\r\n\tconst saveSettingsForm = (formData) => {\r\n\t\tupdateBioProfile(formData)\r\n\t}\r\n\r\n\tif (!profile) return <Preloader/>\r\n\r\n\treturn (\r\n\t\t<Settings saveSettingsForm={saveSettingsForm} profile={profile} updatingBioSuccess={updatingBioSuccess} uploadPhoto={uploadPhoto}/>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tprofile: getProfile(state),\r\n\tupdatingBioSuccess: getUpdatingBioSuccess(state)\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n\trefreshProfileInSettings,\r\n\tupdateBioProfile,\r\n\tupdateWasSuccessfully,\r\n\tsavePhoto,\r\n\tcloseMenu\r\n})(SettingsContainer);"],"sourceRoot":""}